{"version":3,"sources":["webpack:///./src/lib/redux-query/action-types.ts","webpack:///./src/lib/helpers/ngrxQueryConfig.ts","webpack:///./src/lib/index.ts","webpack:///./src/lib/services/connect.service.ts","webpack:///./src/lib/directives/connect.directive.ts","webpack:///./src/lib/helpers/actionTypes.ts","webpack:///./src/lib/helpers/actions.ts","webpack:///./src/lib/redux-query/actions.ts","webpack:///./src/lib/redux-query/query-key.ts","webpack:///./src/lib/services/effects.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/demo/app.component.ts","webpack:///./src/demo/app.module.ts","webpack:///./src/demo/dashboard/dashboard.component.ts","webpack:///./src/demo/dashboard/queries.ts","webpack:///./src/environments/environment.ts","webpack:///./src/lib/helpers/getLatest.ts","webpack:///./src/lib/helpers/invariant.ts","webpack:///./src/lib/ngrx-query.ts","webpack:///./src/lib/redux-query/http-methods.ts","webpack:///./src/lib/redux-query/reducers/entities.ts","webpack:///./src/lib/redux-query/reducers/queries.ts","webpack:///./src/lib/redux-query/selectors.ts","webpack:///./src/demo/app.component.scss","webpack:///./src/demo/app.component.html","webpack:///./src/demo/dashboard/dashboard.component.html","webpack:///./src/lib/helpers/config.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export const REQUEST_ASYNC = '@@query/REQUEST_ASYNC';\nexport const REQUEST_START = '@@query/REQUEST_START';\nexport const REQUEST_SUCCESS = '@@query/REQUEST_SUCCESS';\nexport const REQUEST_FAILURE = '@@query/REQUEST_FAILURE';\n\nexport const CANCEL_QUERY = '@@query/CANCEL_QUERY';\n\nexport const MUTATE_ASYNC = '@@query/MUTATE_ASYNC';\nexport const MUTATE_START = '@@query/MUTATE_START';\nexport const MUTATE_SUCCESS = '@@query/MUTATE_SUCCESS';\nexport const MUTATE_FAILURE = '@@query/MUTATE_FAILURE';\n\nexport const RESET = '@@query/RESET';\nexport const REMOVE_ENTITIES = '@@query/REMOVE_ENTITIES';\nexport const REMOVE_ENTITY = '@@query/REMOVE_ENTITY';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/action-types.ts","export type Selector = (state: any) => any;\nexport interface BackoffConfig {\n  maxAttempts: number;\n  maxDuration: number;\n  minDuration: number;\n};\nexport interface NgrxQueryConfig {\n  queriesSelector?: Selector;\n  entitiesSelector?: Selector;\n  backoff: BackoffConfig;\n  retryableStatusCodes: number[];\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/helpers/ngrxQueryConfig.ts","import 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/retryWhen';\nimport 'rxjs/add/observable/range';\nimport 'rxjs/add/observable/timer';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/zip';\n\nexport { NgrxQueryModule } from './ngrx-query';\nexport { NgrxQueryEffects } from './services/effects.service';\nexport { default as entitiesReducer } from './redux-query/reducers/entities';\nexport { default as queriesReducer } from './redux-query/reducers/queries';\nexport * from './redux-query/selectors';\nexport { ConnectService, ConnectRequestParams, ConnectMutateParams } from './services/connect.service';\nexport { ConnectRequestDirective } from './directives/connect.directive';\nexport { NGRX_QUERY_CONFIG } from './helpers/config';\nexport { NgrxQueryConfig } from './helpers/ngrxQueryConfig';\nexport { RequestParams, MutateParams, requestAsync, mutateAsync } from './helpers/actions';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.ts","import { NgrxQueryConfig, Selector } from '../helpers/ngrxQueryConfig';\nimport { mutateAsync, MutateParams, requestAsync, RequestParams } from '../helpers/actions';\nimport { defaultEntitiesSelector, NGRX_QUERY_CONFIG } from '../helpers/config';\nimport { Inject, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface ConnectRequestParams extends RequestParams {\n  selector?: Selector;\n}\nexport interface ConnectMutateParams extends MutateParams {\n  selector?: Selector;\n}\n\n@Injectable()\nexport class ConnectService {\n  constructor(private store: Store<any>, @Inject(NGRX_QUERY_CONFIG) private config: NgrxQueryConfig) { }\n\n  public mutateAsync(config: ConnectMutateParams): Observable<any> {\n    this.store.dispatch(mutateAsync(config));\n    return this.select(config.selector);\n  }\n\n  public requestAsync(config: ConnectRequestParams): Observable<any> {\n    this.store.dispatch(requestAsync(config));\n    return this.select(config.selector);\n  }\n\n  public select(selector: Selector): Observable<any> {\n    return this.store.select(selector || this.config.entitiesSelector || defaultEntitiesSelector);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/connect.service.ts","import { ConnectRequestParams, ConnectService } from '../services/connect.service';\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Directive({\n  exportAs: 'nqConnect',\n  selector: 'nqConnect, [nqConnect]',\n})\nexport class ConnectRequestDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('nqConnect')\n  @Input()\n  config: any = <ConnectRequestParams>undefined;\n  @Output() response: EventEmitter<any> = new EventEmitter();\n\n  subscription: Subscription;\n\n  constructor(private connectService: ConnectService) {}\n\n  ngOnInit(): void {\n    console.log('on init');\n    this.subscribe(this.config);\n  }\n\n  ngOnDestroy(): void {\n    console.log('on destroy');\n    this.unsubscribe();\n  }\n\n  subscribe(config: ConnectRequestParams): void {\n    // this.unsubscribe();\n    this.subscription = this.connectService.requestAsync(config).subscribe(response => {\n      this.response.emit(response);\n    });\n  }\n\n  unsubscribe(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  forceRequest(): void {\n    this.subscribe(Object.assign({}, this.config, { force: true }));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/directives/connect.directive.ts","export const REQUEST_ASYNC = '[ngrx-query] REQUEST_ASYNC';\nexport const MUTATE_ASYNC = '[ngrx-query] MUTATE_ASYNC';\nexport const CANCEL_QUERY = '[ngrx-query] CANCEL_QUERY';\nexport const RESET = '[ngrx-query] RESET';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/helpers/actionTypes.ts","import * as ngrxQueryActionTypes from './actionTypes';\nimport * as actions from '../redux-query/actions';\n\nexport type TransformFunction = (response: any) => { [id: string]: any};\nexport type UpdateFunction = (prevValue: any, value: any) => any;\nexport interface UpdateFunctionMap {\n  [id: string]: UpdateFunction;\n}\nexport interface HttpOptions {\n  method?: 'DELETE' | 'GET' | 'HEAD' | 'POST' | 'PUT';\n  headers?: { [key: string]: any };\n  credentials?: 'include';\n}\n\nexport interface BaseParams {\n    body?: Object;\n    url: string;\n    queryKey?: string;\n}\nexport interface RequestParams extends BaseParams {\n    force?: boolean;\n    meta?: Object;\n    options?: HttpOptions;\n    retry?: boolean;\n    transform?: TransformFunction;\n    update: UpdateFunctionMap;\n};\n\nexport interface MutateParams extends BaseParams {\n    options?: HttpOptions;\n    optimisticUpdate?: UpdateFunctionMap;\n    transform?: TransformFunction;\n    update: UpdateFunctionMap;\n};\n\nexport const requestAsync = (params: RequestParams) => Object.assign({}, actions.requestAsync(params), { type: ngrxQueryActionTypes.REQUEST_ASYNC });\nexport const mutateAsync = (params: MutateParams) => Object.assign({}, actions.mutateAsync(params), { type: ngrxQueryActionTypes.MUTATE_ASYNC });\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/helpers/actions.ts","import { MutateParams } from './../helpers/actions';\nimport { RequestParams } from '../';\nimport * as actionTypes from './action-types';\n\nexport const requestStart = (url, body, request, meta, queryKey) => {\n    return {\n        type: actionTypes.REQUEST_START,\n        url,\n        body,\n        request,\n        meta,\n        queryKey,\n    };\n};\n\nexport const requestSuccess = (url, body, status, entities, meta, queryKey) => {\n    return {\n        type: actionTypes.REQUEST_SUCCESS,\n        url,\n        body,\n        status,\n        entities,\n        meta,\n        queryKey,\n        time: Date.now(),\n    };\n};\n\nexport const requestFailure = (url, body, status, responseBody, meta, queryKey) => {\n    return {\n        type: actionTypes.REQUEST_FAILURE,\n        url,\n        body,\n        status,\n        responseBody,\n        meta,\n        queryKey,\n        time: Date.now(),\n    };\n};\n\nexport const mutateStart = (url, body, request, optimisticEntities, queryKey) => {\n    return {\n        type: actionTypes.MUTATE_START,\n        url,\n        body,\n        request,\n        optimisticEntities,\n        queryKey,\n    };\n};\n\nexport const mutateSuccess = (url, body, status, entities, queryKey) => {\n    return {\n        type: actionTypes.MUTATE_SUCCESS,\n        url,\n        body,\n        status,\n        entities,\n        queryKey,\n        time: Date.now(),\n    };\n};\n\nexport const mutateFailure = (url, body, status, originalEntities, queryKey) => {\n    return {\n        type: actionTypes.MUTATE_FAILURE,\n        url,\n        body,\n        status,\n        originalEntities,\n        queryKey,\n        time: Date.now(),\n    };\n};\n\nexport const requestAsync: (params: RequestParams) => any = ({\n    body,\n    force,\n    queryKey,\n    meta,\n    options,\n    retry,\n    transform,\n    update,\n    url,\n}) => {\n    return {\n        type: actionTypes.REQUEST_ASYNC,\n        body,\n        force,\n        queryKey,\n        meta,\n        options,\n        retry,\n        transform,\n        update,\n        url,\n    };\n};\n\nexport const mutateAsync: (params: MutateParams) => any = ({\n    body,\n    optimisticUpdate,\n    options,\n    queryKey,\n    transform,\n    update,\n    url,\n}) => {\n    return {\n        type: actionTypes.MUTATE_ASYNC,\n        body,\n        optimisticUpdate,\n        options,\n        queryKey,\n        transform,\n        update,\n        url,\n    };\n};\n\nexport const cancelQuery = (queryKey) => {\n    return {\n        type: actionTypes.CANCEL_QUERY,\n        queryKey,\n    };\n};\n\nexport const removeEntity = (path) => {\n    return {\n        type: actionTypes.REMOVE_ENTITY,\n        path,\n    };\n};\n\nexport const removeEntities = (paths) => {\n    return {\n        type: actionTypes.REMOVE_ENTITIES,\n        paths,\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/actions.ts","import { BaseParams } from './../helpers/actions';\n\nexport const getQueryKey = (url, body) => {\n    return JSON.stringify({ url, body });\n};\n\nexport const reconcileQueryKey: (params: BaseParams) => string = ({ url, body, queryKey }) => {\n    if (queryKey !== null && queryKey !== undefined) {\n        return queryKey;\n    } else {\n        return getQueryKey(url, body);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/query-key.ts","import { NgrxQueryConfig } from '../helpers/ngrxQueryConfig';\nimport { defaultEntitiesSelector, defaultQueriesSelector } from './../helpers/config';\nimport { invariant } from '../helpers/invariant';\nimport * as ngrxQueryActionTypes from '../helpers/actionTypes';\nimport { NGRX_QUERY_CONFIG } from '../helpers/config';\nimport { getLatest } from '../helpers/getLatest';\nimport { Inject, Injectable } from '@angular/core';\nimport { Http, Request } from '@angular/http';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as actions from '../redux-query/actions';\nimport * as actionTypes from '../redux-query/action-types';\nimport * as httpMethods from '../redux-query/http-methods';\nimport { reconcileQueryKey } from '../redux-query/query-key';\nimport { Observable } from 'rxjs/Observable';\n\nexport function identity(x: any, y?: any): any {\n  return x;\n}\n\nexport function optimisticUpdateEntities(optimisticUpdate, entities) {\n  return Object.keys(optimisticUpdate).reduce(\n    (accum, key) => {\n      if (optimisticUpdate[key]) {\n        accum[key] = optimisticUpdate[key](entities[key]);\n      } else {\n        accum[key] = entities[key];\n      }\n\n      return accum;\n    },\n    {});\n};\n\nexport function updateEntities(update, entities, transformed) {\n  // If update not supplied, then no change to entities should be made\n  return Object.keys(update || {}).reduce(\n    (accum, key) => {\n      accum[key] = update[key]((entities || {})[key], (transformed || {})[key]);\n\n      return accum;\n    },\n    {});\n};\n\nexport function getPendingQueries(queries: any[]) {\n  return queries.filter((query) => query.isPending);\n};\n\n@Injectable()\nexport class NgrxQueryEffects {\n  @Effect() public requestAsync: Observable<Action> = this.actions$\n    .ofType(ngrxQueryActionTypes.REQUEST_ASYNC)\n    .map((action: any) => {\n      const {\n        url,\n        force,\n        retry,\n        update,\n      } = action;\n\n      invariant(!!url, 'Missing required `url` field in action handler');\n      invariant(!!update, 'Missing required `update` field in action handler');\n\n      const queryKey = reconcileQueryKey(action);\n\n      const state = getLatest(this.store);\n      const queries = this.config.queriesSelector\n        ? this.config.queriesSelector(state)\n        : defaultQueriesSelector(state);\n\n      const queriesState = queries[queryKey];\n      const { isPending, status } = queriesState || <any>{};\n      const hasSucceeded = status >= 200 && status < 300;\n      const attemptRequest = force || !queriesState || (retry && !isPending && !hasSucceeded);\n      return { attemptRequest, action };\n    })\n    .filter(({ attemptRequest }) => attemptRequest)\n    .mergeMap(({ action }) => {\n      const {\n        url,\n        body,\n        transform = identity,\n        update,\n        options = <any>{},\n        meta,\n      } = action;\n      const queryKey = reconcileQueryKey(action);\n\n      const start = new Date();\n      const { method = httpMethods.GET } = options;\n\n      const request = new Request({\n        url,\n        method,\n        body,\n        headers: options.headers,\n        withCredentials: options.credentials === 'include',\n      });\n\n      return Observable.of({})\n        .mergeMap(() => {\n          this.store.dispatch(actions.requestStart(url, body, request, meta, queryKey));\n          return this.http.request(url, request);\n        })\n        .map(response => {\n          const callbackState = getLatest(this.store);\n          const entities = this.config.entitiesSelector\n            ? this.config.entitiesSelector(callbackState)\n            : defaultEntitiesSelector(callbackState);\n          const transformed = transform(response.json(), response.text());\n          const newEntities = updateEntities(update, entities, transformed);\n          this.store.dispatch(actions.requestSuccess(url, body, response.status, newEntities, meta, queryKey));\n          const end = new Date();\n          const duration = end.valueOf() - start.valueOf();\n          return {\n            body: response.json(),\n            duration,\n            entities: newEntities,\n            status: response.status,\n            text: response.text,\n            transformed,\n            type: actionTypes.REQUEST_ASYNC,\n          };\n        })\n        .retryWhen(attempts => {\n          return Observable.range(1, this.config.backoff.maxAttempts + 1)\n            .zip(attempts, (i, response) => ({ response, i }))\n            .flatMap(({ response, i }) => {\n              if (i < this.config.backoff.maxAttempts && this.config.retryableStatusCodes.indexOf(response.status) >= 0) {\n                // Delay retry by min duration the first attempt, up to max duration on the (maxAttempts)th attempt\n                return Observable.timer(\n                  this.config.backoff.minDuration +\n                  (i - 1) * (this.config.backoff.maxDuration - this.config.backoff.minDuration) / this.config.backoff.maxAttempts,\n                );\n              } else {\n                // Tried maxAttempts, now fail\n                throw response;\n              }\n            });\n        })\n        .catch((errResponse, caught) => {\n          if (!errResponse.text) {\n            throw errResponse;\n          }\n          return Observable.of(actions.requestFailure(\n            url,\n            body,\n            errResponse.status,\n            errResponse.text(),\n            meta,\n            queryKey,\n          ));\n        });\n    });\n\n  @Effect() public mutateAsync: Observable<any> = this.actions$\n    .ofType(ngrxQueryActionTypes.MUTATE_ASYNC)\n    .mergeMap((action: any) => {\n      const {\n          url,\n        transform = identity,\n        update,\n        body,\n        optimisticUpdate,\n        options = <any>{},\n      } = action;\n      invariant(!!url, 'Missing required `url` field in action handler');\n\n      const state = getLatest(this.store);\n      const entities = this.config.entitiesSelector\n        ? this.config.entitiesSelector(state)\n        : defaultEntitiesSelector(state);\n      let optimisticEntities;\n      if (optimisticUpdate) {\n        optimisticEntities = optimisticUpdateEntities(optimisticUpdate, entities);\n      }\n\n      const queryKey = reconcileQueryKey(action);\n      // const start = new Date();\n      const { method = httpMethods.POST } = options;\n      const request = new Request({\n        url,\n        method,\n        body,\n        headers: options.headers,\n        withCredentials: options.credentials === 'include',\n      });\n\n      // Note: only the entities that are included in `optimisticUpdate` will be passed along in the\n      // `mutateStart` action as `optimisticEntities`\n      this.store.dispatch(actions.mutateStart(url, body, request, optimisticEntities, queryKey));\n\n      return this.http.request(url, request)\n        .map(response => {\n          const resStatus = (response && response.status) || 0;\n          const resBody = (response && response.json()) || undefined;\n          const resText = (response && response.text()) || undefined;\n\n          const transformed = transform(resBody, resText);\n          const newEntities = updateEntities(update, entities, transformed);\n          return actions.mutateSuccess(url, body, resStatus, newEntities, queryKey);\n        })\n        .catch(errResponse => Observable.of(actions.mutateFailure(url, body, errResponse.status, entities, queryKey)));\n    });\n  // @Effect() public cancelQuery: Observable<Action> = this.actions$;\n  // @Effect() public reset: Observable<Action> = this.actions$;\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<any>,\n    private http: Http,\n    @Inject(NGRX_QUERY_CONFIG) private config: NgrxQueryConfig,\n  ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/effects.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 340;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 340\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './demo/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { ConnectRequestParams } from '../lib';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'nq-demo',\n  styleUrls: ['./app.component.scss'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  dashboardId: number = 2;\n  isShown: boolean = false;\n  data: any;\n\n  config: ConnectRequestParams = {\n    selector: s => s.queries,\n    transform: response => ({\n      chartsById: { test: response.test },\n      dashboardsById: { test: response.test },\n    }),\n    update: {\n      chartsById: (prevCharts, dashboardCharts) => ({\n        ...prevCharts,\n        ...dashboardCharts,\n      }),\n      dashboardsById: (prevDashboards, dashboards) => ({\n        ...prevDashboards,\n        ...dashboards,\n      }),\n    },\n    url: `/api/dashboard/${this.dashboardId}`,\n  };\n\n  onDataReceived(data: any): void {\n    this.data = data;\n    console.log(data);\n  }\n\n  log(message: any): void {\n    console.log(message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/app.component.ts","import { DashboardComponent } from './dashboard/dashboard.component';\nimport { entitiesReducer, NgrxQueryModule, queriesReducer } from '../lib';\nimport { AppComponent } from './app.component';\nimport { ApplicationRef, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BaseRequestOptions, Http, HttpModule, Response, ResponseOptions } from '@angular/http';\nimport { MockBackend } from '@angular/http/testing';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nexport function httpFactory(backend, options): Http {\n  return new Http(backend, options);\n}\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    StoreModule.provideStore({\n      entities: entitiesReducer,\n      queries: queriesReducer,\n    }),\n    NgrxQueryModule,\n    StoreDevtoolsModule.instrumentOnlyWithExtension(),\n  ],\n  providers: [\n     BaseRequestOptions,\n     MockBackend,\n     {\n       deps: [MockBackend, BaseRequestOptions],\n       provide: Http,\n       useFactory: httpFactory,\n     },\n  ],\n})\nexport class AppModule {\n  constructor(public appRef: ApplicationRef, public mockBackend: MockBackend) {\n    mockBackend.connections.subscribe(connection => {\n      console.log(connection);\n      connection.mockRespond(new Response(new ResponseOptions({\n        body: JSON.stringify({ test: 'value' }),\n      })));\n    });\n  }\n  // hmrOnInit(store: any): void {\n  //   console.log('HMR store', store);\n  // }\n  // hmrOnDestroy(store: any): void {\n  //   let cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\n  //   // recreate elements\n  //   store.disposeOldHosts = createNewHosts(cmpLocation);\n  //   // remove styles\n  //   removeNgStyles();\n  // }\n  // hmrAfterDestroy(store: any): void {\n  //   // display new elements\n  //   store.disposeOldHosts();\n  //   delete store.disposeOldHosts;\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/app.module.ts","import { Observable } from 'rxjs/Observable';\nimport { createUpdateDashboardQuery, dashboardByIdSelector } from './queries';\nimport { ConnectService } from '../../lib';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'my-dashboard',\n  templateUrl: 'dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n  @Input() dashboardId = 2;\n  dashboard$: Observable<any>;\n\n  constructor(private connectService: ConnectService) { }\n\n  ngOnInit(): void {\n    const newName = 'steve';\n\n    this.dashboard$ = this.connectService.mutateAsync({\n      ...createUpdateDashboardQuery(this.dashboardId, newName),\n      selector: dashboardByIdSelector(this.dashboardId),\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/dashboard/dashboard.component.ts","import { mutateAsync } from '../../lib';\n\nexport const createUpdateDashboardQuery = (dashboardId, newName) => ({\n    body: {\n        name: newName,\n    },\n    update: {\n        dashboardsById: (prevDashboardsById, newDashboardsById) => ({\n            ...prevDashboardsById,\n            ...newDashboardsById,\n        }),\n    },\n    url: `/api/${dashboardId}/update`,\n});\n\nexport const updateDashboard = (dashboardId, newName) => {\n    return mutateAsync(createUpdateDashboardQuery(dashboardId, newName));\n};\n\nexport const dashboardByIdSelector = dashboardId => state => {\n    if (state.entities.dashboardsById) {\n        return state.entities.dashboardsById[dashboardId];\n    } else {\n        return undefined;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/dashboard/queries.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Observable } from 'rxjs/Observable';\n\nexport function getLatest<T>(o$: Observable<T>): T {\n  let result: T;\n  o$.take(1).subscribe(x => result = x);\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/helpers/getLatest.ts","export function invariant(condition: boolean, message: string, context?: any): void {\n  if (!condition) {\n    let errorMessage = message;\n\n    if (context) {\n      errorMessage = (message.indexOf('%s') !== -1) ?\n        message.replace('%s', context) :\n        errorMessage = `${message}: ${context}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/helpers/invariant.ts","import { NgrxQueryConfig } from './helpers/ngrxQueryConfig';\nimport { ConnectRequestDirective } from './directives/connect.directive';\nimport { defaultConfig, NGRX_QUERY_CONFIG } from './helpers/config';\nimport { ConnectService } from './services/connect.service';\nimport { NgrxQueryEffects } from './services/effects.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  declarations: [\n    ConnectRequestDirective,\n  ],\n  exports: [\n    ConnectRequestDirective,\n  ],\n  imports: [\n    EffectsModule.run(NgrxQueryEffects),\n  ],\n  providers: [\n    { provide: NGRX_QUERY_CONFIG, useValue: defaultConfig},\n    NgrxQueryEffects,\n    ConnectService,\n  ],\n})\nexport class NgrxQueryModule {\n\n  /* optional: in case you need users to override your providers */\n  static forRoot(config: NgrxQueryConfig): ModuleWithProviders {\n    return {\n      ngModule: NgrxQueryModule,\n      providers: [{ provide: NGRX_QUERY_CONFIG, useValue: config }],\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ngrx-query.ts","export const DELETE = 'DELETE';\nexport const GET = 'GET';\nexport const HEAD = 'HEAD';\nexport const POST = 'POST';\nexport const PUT = 'PUT';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/http-methods.ts","import {\n    MUTATE_FAILURE,\n    MUTATE_START,\n    MUTATE_SUCCESS,\n    REQUEST_SUCCESS,\n    RESET,\n    REMOVE_ENTITIES,\n    REMOVE_ENTITY,\n} from '../action-types';\n\nexport const initialState = {};\n\nexport const withoutPath = (state, path) => {\n    const [key, ...restPath] = path;\n\n    if (restPath.length) {\n        return Object.assign({}, state, {\n            [key]: withoutPath(state[key], restPath),\n        });\n    } else {\n      const newState = Object.assign({}, state);\n      delete newState[key];\n      return newState;\n    }\n};\n\nexport const entities = (state = initialState, action) => {\n    if (action.type === RESET) {\n        return 'entities' in action ? action.entities : initialState;\n    } else if (action.type === MUTATE_START && action.optimisticEntities) {\n        return Object.assign({}, state, action.optimisticEntities);\n    } else if (action.type === MUTATE_FAILURE && action.originalEntities) {\n        return Object.assign({}, state, action.originalEntities);\n    } else if (action.type === REQUEST_SUCCESS || action.type === MUTATE_SUCCESS) {\n        return Object.assign({}, state, action.entities);\n    } else if (action.type === REMOVE_ENTITIES) {\n        return action.paths.reduce((accum, path) => {\n            return withoutPath(accum, path);\n        }, state);\n    } else if (action.type === REMOVE_ENTITY) {\n        return withoutPath(state, action.path);\n    } else {\n        return state;\n    }\n};\n\nexport default entities;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/reducers/entities.ts","import * as actionTypes from '../action-types';\n\nconst initialState = {};\n\nconst queries = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.RESET: {\n            return {};\n        }\n        case actionTypes.MUTATE_START:\n        case actionTypes.REQUEST_START: {\n            const { queryKey } = action;\n\n            return Object.assign({}, state, {\n                [queryKey]: {\n                    url: action.url,\n                    isFinished: false,\n                    isPending: true,\n                    request: action.request,\n                    isMutation: action.type === actionTypes.MUTATE_START,\n                    queryCount: state[queryKey] ? state[queryKey].queryCount + 1 : 1,\n                },\n            });\n        }\n        case actionTypes.REQUEST_SUCCESS:\n        case actionTypes.MUTATE_FAILURE:\n        case actionTypes.MUTATE_SUCCESS:\n        case actionTypes.REQUEST_FAILURE: {\n            const { queryKey } = action;\n\n            return Object.assign({}, state, {\n                [queryKey]: Object.assign({}, state[queryKey], {\n                    isFinished: true,\n                    isPending: false,\n                    lastUpdated: action.time,\n                    status: action.status,\n                }),\n            });\n        }\n        case actionTypes.CANCEL_QUERY: {\n            const { queryKey } = action;\n\n            if (state[queryKey].isPending) {\n                // Make sure request is actually pending\n\n                return Object.assign({}, state, {\n                    [queryKey]: Object.assign({}, state[queryKey], {\n                        isFinished: true,\n                        isPending: false,\n                        status: 0,\n                    }),\n                });\n            }\n\n            return state;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default queries;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/reducers/queries.ts","// import get from 'lodash.get';\n\nimport { reconcileQueryKey } from './query-key';\n\nexport const isFinished = (urlOrConfig, body) => (queriesState) => {\n    let queryKey;\n\n    if (typeof urlOrConfig === 'string') {\n        queryKey = reconcileQueryKey({ url: urlOrConfig, body });\n    } else {\n        queryKey = reconcileQueryKey(urlOrConfig);\n    }\n\n    return queriesState[queryKey].isFinished;\n};\n\nexport const isPending = (urlOrConfig, body) => (queriesState) => {\n    let queryKey;\n\n    if (typeof urlOrConfig === 'string') {\n        queryKey = reconcileQueryKey({ url: urlOrConfig, body });\n    } else {\n        queryKey = reconcileQueryKey(urlOrConfig);\n    }\n\n    return queriesState[queryKey].isPending;\n};\n\nexport const status = (urlOrConfig, body) => (queriesState) => {\n    let queryKey;\n\n    if (typeof urlOrConfig === 'string') {\n        queryKey = reconcileQueryKey({ url: urlOrConfig, body });\n    } else {\n        queryKey = reconcileQueryKey(urlOrConfig);\n    }\n\n    return queriesState[queryKey].status;\n};\n\nexport const lastUpdated = (urlOrConfig, body) => (queriesState) => {\n    let queryKey;\n\n    if (typeof urlOrConfig === 'string') {\n        queryKey = reconcileQueryKey({ url: urlOrConfig, body });\n    } else {\n        queryKey = reconcileQueryKey(urlOrConfig);\n    }\n\n    return queriesState[queryKey].lastUpdated;\n};\n\nexport const queryCount = (urlOrConfig, body) => (queriesState) => {\n    let queryKey;\n\n    if (typeof urlOrConfig === 'string') {\n        queryKey = reconcileQueryKey({ url: urlOrConfig, body });\n    } else {\n        queryKey = reconcileQueryKey(urlOrConfig);\n    }\n\n    return queriesState[queryKey].queryCount;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/redux-query/selectors.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  text-align: center;\\n  font-family: sans-serif; }\\n\\nmain {\\n  padding: 1em;\\n  font-family: Arial, Helvetica, sans-serif;\\n  display: block; }\\n\\nfooter {\\n  text-align: center;\\n  font-size: 0.8em;\\n  width: 100%;\\n  position: absolute;\\n  bottom: 20px; }\\n\\nfooter a {\\n  text-decoration: none;\\n  font-family: sans-serif; }\\n\\nfooter a:hover {\\n  text-decoration: underline; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/demo/app.component.scss\n// module id = 526\n// module chunks = 1","module.exports = \"<header>\\n  <h1 class=\\\"title\\\">Test</h1>\\n</header>\\n<main>\\n  <label for=\\\"isShown\\\">Show Connected Element?</label> <input id=\\\"isShown\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"isShown\\\">\\n  <nqConnect *ngIf=\\\"isShown\\\" [config]=\\\"config\\\" (response)=\\\"data = $event\\\" #connect=\\\"nqConnect\\\">\\n    {{ data?.chartsById?.test }}\\n    <a href (click)=\\\"connect.forceRequest(); $event.preventDefault()\\\">Force Refresh</a>\\n  </nqConnect>\\n</main>\\n<footer>\\n  <a href=\\\"https://github.com/isaacplmann/ngrx-query\\\">Ngrx Query</a>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/demo/app.component.html\n// module id = 528\n// module chunks = 1","module.exports = \"{{ dashboard$ | async }}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/demo/dashboard/dashboard.component.html\n// module id = 529\n// module chunks = 1","import { NgrxQueryConfig } from './ngrxQueryConfig';\nimport { OpaqueToken } from '@angular/core';\n\nexport const statusCodes = {\n  GATEWAY_TIMEOUT: 504,\n  REQUEST_TIMEOUT: 408, // client took too long\n  SERVICE_UNAVAILABLE: 503,\n  TOO_MANY_REQUESTS: 429,\n  UNKNOWN: 0,\n};\n\nexport const NGRX_QUERY_CONFIG = new OpaqueToken('NGRX_QUERY_CONFIG');\n\nexport const defaultEntitiesSelector = state => state.entities;\nexport const defaultQueriesSelector = state => state.queries;\n\nexport const defaultConfig: NgrxQueryConfig = {\n  backoff: {\n    maxAttempts: 5,\n    maxDuration: 5000,\n    minDuration: 300,\n  },\n  retryableStatusCodes: [\n    statusCodes.UNKNOWN, // normally means a failed connection\n    statusCodes.REQUEST_TIMEOUT,\n    statusCodes.TOO_MANY_REQUESTS, // hopefully backoff stops this getting worse\n    statusCodes.SERVICE_UNAVAILABLE,\n    statusCodes.GATEWAY_TIMEOUT,\n  ],\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/helpers/config.ts"],"sourceRoot":""}