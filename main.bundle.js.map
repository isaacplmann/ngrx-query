{"version":3,"sources":["/Users/isaac/Documents/Contributions/ngrx-query/src/$_gendir lazy","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.component.html","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.component.scss","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.component.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.module.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/mockServer.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/networkLogger.service.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/queriesList/queries-list.component.html","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/queriesList/queries-list.component.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/queries.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-detail.component.html","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-detail.component.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-list.component.html","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-list.component.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-list.data.directive.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/environments/environment.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/directives/connect.directive.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/directives/connected.component.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/actionTypes.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/actions.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/config.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/getLatest.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/invariant.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/mockMode.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/ngrxQueryConfig.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/ofType.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/index.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/ngrx-query.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/services/connect.service.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/services/connectEntity.service.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/lib/services/effects.service.ts","/Users/isaac/Documents/Contributions/ngrx-query/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/isaac/Documents/Contributions/ngrx-query/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<header>\\n  <h1 class=\\\"title\\\">Ngrx Query</h1>\\n</header>\\n<aside>\\n  <nq-queries-list></nq-queries-list>\\n</aside>\\n<main>\\n  <h3>Server Status</h3>\\n  <label>\\n    <input type=\\\"radio\\\" [(ngModel)]=\\\"mockServer.state\\\" name=\\\"serverState\\\" [value]=\\\"serverState.ON\\\">On</label>\\n  <br>\\n  <label>\\n    <input type=\\\"radio\\\" [(ngModel)]=\\\"mockServer.state\\\" name=\\\"serverState\\\" [value]=\\\"serverState.BUSY\\\">Busy</label>\\n  <br>\\n  <label>\\n    <input type=\\\"radio\\\" [(ngModel)]=\\\"mockServer.state\\\" name=\\\"serverState\\\" [value]=\\\"serverState.ERROR\\\">Error</label>\\n  <br>\\n\\n  <p>Open the console to see the fake server calls (using MockBackend).</p>\\n\\n  <h3>Connected Element/Component</h3>\\n  <label for=\\\"isShown\\\">Show List?</label>\\n  <input id=\\\"isShown\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"isShown\\\">\\n  <nq-ranger-list *ngIf=\\\"isShown\\\" rangerListData></nq-ranger-list>\\n</main>\\n<footer>\\n  <a href=\\\"https://github.com/isaacplmann/ngrx-query\\\">Ngrx Query</a>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.component.html\n// module id = ../../../../../src/demo/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  text-align: center;\\n  font-family: sans-serif; }\\n\\nmain {\\n  padding: 1em;\\n  font-family: Arial, Helvetica, sans-serif;\\n  display: block; }\\n\\naside {\\n  float: right;\\n  width: 300px; }\\n\\nfooter {\\n  text-align: center;\\n  font-size: 0.8em;\\n  width: 100%;\\n  position: absolute;\\n  bottom: 20px; }\\n\\nfooter a {\\n  text-decoration: none;\\n  font-family: sans-serif; }\\n\\nfooter a:hover {\\n  text-decoration: underline; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.component.scss\n// module id = ../../../../../src/demo/app.component.scss\n// module chunks = main","import { createGetRangerListQuery, rangerListSelector } from './ranger/queries';\nimport { ConnectService } from './../lib/services/connect.service';\nimport { MockServerService, Ranger, SERVER_STATE } from './mockServer';\nimport { arrayToObjectsById, objectsByIdToArray } from '../lib/services/connectEntity.service';\nimport { ConnectRequestParams } from '../lib';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nq-demo',\n  styleUrls: ['./app.component.scss'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  serverState = SERVER_STATE;\n\n  constructor(private connectService: ConnectService, private mockServer: MockServerService) {}\n\n  log(message: any): void {\n    console.log(message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.component.ts","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ApplicationRef, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { environment } from '../environments/environment';\nimport { entitiesReducer, NgrxQueryModule, queriesReducer } from '../lib';\nimport { AppComponent } from './app.component';\nimport { MockServerService } from './mockServer';\nimport { NetworkLoggerService } from './networkLogger.service';\nimport { QueriesListComponent } from './queriesList/queries-list.component';\nimport { RangerDetailComponent } from './ranger/ranger-detail.component';\nimport { RangerListComponent } from './ranger/ranger-list.component';\nimport { RangerListDataDirective } from './ranger/ranger-list.data.directive';\n\nexport function entitiesSelector(state): any {\n  return state.entities1;\n}\nexport function queriesSelector(state): any {\n  return state.queries1;\n}\nexport function saveMockData(queryKey, actions): void {\n  return window.localStorage.setItem('mockApi-' + queryKey, JSON.stringify(actions));\n}\nexport function getMockData(queryKey): any[] {\n  return JSON.parse(window.localStorage.getItem('mockApi-' + queryKey));\n}\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\n    QueriesListComponent,\n    RangerListComponent,\n    RangerDetailComponent,\n    RangerListDataDirective,\n  ],\n  imports: [\n    BrowserModule,\n    EffectsModule.forRoot([]),\n    HttpClientModule,\n    FormsModule,\n    StoreModule.forRoot({\n      entities1: entitiesReducer,\n      queries1: queriesReducer,\n    }),\n    NgrxQueryModule.forRoot({\n      entitiesSelector,\n      queriesSelector,\n      mock: {\n        mode: environment.mockMode,\n        saveMockData,\n        getMockData,\n      },\n    }),\n    StoreDevtoolsModule.instrument(),\n  ],\n  providers: [\n    MockServerService,\n    NetworkLoggerService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NetworkLoggerService,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useExisting: MockServerService,\n      multi: true,\n    },\n  ],\n})\nexport class AppModule {\n  constructor(public appRef: ApplicationRef) {\n  }\n  // hmrOnInit(store: any): void {\n  //   console.log('HMR store', store);\n  // }\n  // hmrOnDestroy(store: any): void {\n  //   let cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\n  //   // recreate elements\n  //   store.disposeOldHosts = createNewHosts(cmpLocation);\n  //   // remove styles\n  //   removeNgStyles();\n  // }\n  // hmrAfterDestroy(store: any): void {\n  //   // display new elements\n  //   store.disposeOldHosts();\n  //   delete store.disposeOldHosts;\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/app.module.ts","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\nexport enum RequestMethod {\n  Get = 'GET',\n  Post = 'POST',\n  Put = 'PUT',\n  Delete = 'DELETE',\n}\n\nexport enum SERVER_STATE {\n  ON,\n  BUSY,\n  ERROR,\n  UNAUTHORIZED,\n}\n\nexport interface Ranger {\n  id?: number;\n  name?: string;\n  color?: string;\n}\n\nexport const defaultRangers: Ranger[] = [\n  {\n    id: 0,\n    name: 'Jason',\n    color: 'red',\n  },\n  {\n    id: 1,\n    name: 'Zack',\n    color: 'black',\n  },\n  {\n    id: 2,\n    name: 'Trini',\n    color: 'yellow',\n  },\n  {\n    id: 3,\n    name: 'Kimberly',\n    color: 'pink',\n  },\n  {\n    id: 4,\n    name: 'Billy',\n    color: 'blue',\n  },\n];\n\n@Injectable()\nexport class MockServerService implements HttpInterceptor {\n  rangers: Ranger[] = defaultRangers;\n  state: SERVER_STATE = SERVER_STATE.ON;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const { body, method, url } = req;\n    const path = url.split('/').filter(segment => segment && segment.length > 0);\n    const id = +path[path.length - 1];\n\n    if (this.state === SERVER_STATE.BUSY) {\n      return of(new HttpResponse({\n        status: 429,\n        body: { error: 'Too many requests'},\n      }));\n    } else if (this.state === SERVER_STATE.UNAUTHORIZED) {\n      return of(new HttpResponse({\n        status: 401,\n        body: { error: 'Unauthorized'},\n      }));\n    } else if (this.state === SERVER_STATE.ERROR) {\n      return of(new HttpResponse({\n        status: 500,\n        body: { error: 'Internal server error'},\n      }));\n    }\n    switch (method) {\n      case RequestMethod.Get:\n        if (Number.isInteger(id)) {\n          return of(new HttpResponse({\n            body: this.rangers.find(ranger => ranger.id === id),\n            status: 200,\n          }));\n        } else {\n          return of(new HttpResponse({\n            body: this.rangers.map(ranger => ({ id: ranger.id, name: ranger.name })),\n            status: 200,\n          }));\n        }\n      case RequestMethod.Post:\n        body.id = this.rangers.length;\n        this.rangers.push(body);\n        return of(new HttpResponse({\n          body,\n          status: 200,\n        }));\n      case RequestMethod.Put:\n        if (Number.isInteger(id)) {\n          console.log(this.rangers);\n          const index = this.rangers.findIndex(ranger => ranger && ranger.id === id);\n          if (index >= 0) {\n            this.rangers[index] = Object.assign({}, this.rangers[index], body);\n            return of(new HttpResponse({\n              body,\n              status: 200,\n            }));\n          } else {\n            return of(new HttpResponse({\n              status: 404,\n              body: 'Invalid ID',\n            }));\n          }\n        }\n        return this.handleUnknown();\n      case RequestMethod.Delete:\n        if (Number.isInteger(id)) {\n          const index = this.rangers.findIndex(ranger => ranger.id === id);\n          if (index >= 0) {\n            this.rangers = this.rangers.slice(0, index).concat(this.rangers.slice(index + 1));\n            return of(new HttpResponse({\n              body: { message: 'Successfully deleted id ' + id },\n              status: 200,\n            }));\n          } else {\n            return of(new HttpResponse({\n              status: 404,\n              body: 'Invalid ID',\n            }));\n          }\n        }\n        return this.handleUnknown();\n      default:\n        return this.handleUnknown();\n    }\n  }\n\n  handleUnknown(): Observable<HttpResponse<string>> {\n    return of(new HttpResponse({\n      status: 404,\n      body: 'Unknown api endpoint',\n    }));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/mockServer.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { tap, filter } from 'rxjs/operators';\n\n@Injectable()\nexport class NetworkLoggerService implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log(`${req.method.toUpperCase()} ${req.url} ${req.body}`);\n    return next.handle(req).pipe(\n      filter(event => event.type === HttpEventType.Response),\n      tap((response: HttpResponse<any>) => console.log(response.status || 200, response.body)),\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/networkLogger.service.ts","module.exports = \"Queries\\n<dl *ngIf=\\\"queriesList$ | async as queriesList\\\">\\n  <ng-container *ngFor=\\\"let key of getKeys(queriesList)\\\">\\n    <dt>{{key}}</dt>\\n    <dd [id]=\\\"key\\\">{{queriesList[key] | json}}</dd>\\n  </ng-container>\\n</dl>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/queriesList/queries-list.component.html\n// module id = ../../../../../src/demo/queriesList/queries-list.component.html\n// module chunks = main","import { queriesSelector } from '../app.module';\nimport { ConnectService } from '../../lib/services/connect.service';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'nq-queries-list',\n  templateUrl: 'queries-list.component.html'\n})\nexport class QueriesListComponent {\n  queriesList$: Observable<any>\n\n  constructor(private connectService: ConnectService) {\n    this.queriesList$ = connectService.select(queriesSelector);\n  }\n\n  getKeys(object: any): string[] {\n    return Object.keys(object);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/queriesList/queries-list.component.ts","import { RequestParams } from '../../lib';\nimport { arrayToObjectsById, objectsByIdToArray } from '../../lib/services/connectEntity.service';\nimport { Ranger } from '../mockServer';\nimport { MutateParams } from './../../lib/helpers/actions';\n\nexport function createGetRangerQuery(id): RequestParams {\n  return {\n      transform: response => ({ rangersById: { [id]: response } }),\n      update: {\n        rangersById: (prevEntities, entities) => ({\n          ...prevEntities,\n          ...entities,\n        }),\n      },\n      url: `/api/rangers/${id}`,\n  };\n};\n\nexport function createGetRangerListQuery(): RequestParams {\n  return {\n    transform: response => ({\n      rangersById: arrayToObjectsById(response, ranger => ranger.id),\n    }),\n    update: {\n      rangersById: (prevRangers, rangers) => ({\n        ...prevRangers,\n        ...rangers,\n      }),\n    },\n    url: `/api/rangers`,\n  };\n}\n\nexport function createCreateRangerQuery(ranger): MutateParams {\n  return {\n    body: ranger,\n    optimisticUpdate: {\n      rangersById: (prevEntities) => ({\n        ...prevEntities,\n        [ranger.id]: ranger,\n      }),\n    },\n    transform: response => ({ rangersById: { [response.id]: response } }),\n    update: {\n      rangersById: (prevEntities, entities) => ({\n        ...prevEntities,\n        ...entities,\n      }),\n    },\n    url: `/api/rangers`,\n  };\n}\nexport function createUpdateRangerQuery(ranger): MutateParams {\n  return {\n    body: ranger,\n    optimisticUpdate: {\n      rangersById: (prevEntities) => ({\n        ...prevEntities,\n        [ranger.id]: ranger,\n      }),\n    },\n    options: {\n      method: 'PUT',\n    },\n    transform: response => ({ rangersById: { [response.id]: response } }),\n    update: {\n      rangersById: (prevEntities, entities) => ({\n        ...prevEntities,\n        ...entities,\n      }),\n    },\n    url: `/api/rangers/${ranger.id}`,\n  };\n}\nexport function createDeleteRangerQuery(id): MutateParams {\n  return {\n    optimisticUpdate: {\n      rangersById: prevEntities => {\n        const { [id]: deleted, ...rest} = prevEntities;\n        return rest;\n      },\n    },\n    options: {\n      method: 'DELETE',\n    },\n    update: {\n      rangersById: prevEntities => {\n        const { [id]: deleted, ...rest} = prevEntities;\n        return rest;\n      },\n    },\n    url: `/api/rangers/${id}`,\n  };\n}\n\nexport function rangerByIdSelector(rangerId): (any) => Ranger {\n  return state => {\n    if (rangerListSelector(state)) {\n        return rangerListSelector(state)[rangerId];\n    } else {\n        return undefined;\n    }\n  };\n}\nexport function rangerListSelector(s): Ranger[] {\n  return objectsByIdToArray(s.entities1.rangersById);\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/queries.ts","module.exports = \"<strong>Favorite Color:</strong> {{nqData?.color}}\\n<button [id]=\\\"'detailRefresh' + nqData?.id\\\" (click)=\\\"nqRefresh.emit({})\\\">Refresh</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-detail.component.html\n// module id = ../../../../../src/demo/ranger/ranger-detail.component.html\n// module chunks = main","import { NqConnectedComponent, provideNqConnectedComponent } from '../../lib';\nimport { Ranger } from '../mockServer';\nimport { Component, EventEmitter, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [provideNqConnectedComponent(RangerDetailComponent)],\n  selector: 'nq-ranger-detail',\n  templateUrl: 'ranger-detail.component.html'\n})\nexport class RangerDetailComponent implements NqConnectedComponent {\n  @Input() nqData = <Ranger>undefined;\n  @Output() nqRefresh: EventEmitter<any> = new EventEmitter();\n\n  constructor(public changeDetector: ChangeDetectorRef) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-detail.component.ts","module.exports = \"<button id=\\\"listRefresh\\\" (click)=\\\"nqRefresh.emit({})\\\">Refresh</button>\\n<table>\\n  <tr>\\n    <th>Name</th>\\n    <th>Actions</th>\\n  </tr>\\n  <tbody *ngFor=\\\"let ranger of nqData\\\">\\n    <tr>\\n      <td>{{ranger.name}}</td>\\n      <td>\\n        <button (click)=\\\"showRangers[ranger.id] = !showRangers[ranger.id]\\\">{{ showRangers[ranger.id] ? 'Hide' : 'Show' }} Details</button>\\n        <button (click)=\\\"edit(ranger)\\\">Edit</button>\\n        <button (click)=\\\"delete(ranger.id)\\\">Delete</button>\\n      </td>\\n    </tr>\\n    <tr *ngIf=\\\"showRangers[ranger.id]\\\">\\n      <td colspan=\\\"2\\\">\\n        <nq-ranger-detail [nqConnect]=\\\"getDetailsQuery(ranger.id)\\\"></nq-ranger-detail>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<h3>Add person</h3>\\n<label for=\\\"name\\\">Name</label><br>\\n<input type=\\\"text\\\" id=\\\"name\\\" [(ngModel)]=\\\"newRanger.name\\\" placeholder=\\\"i.e. Tommy\\\"><br>\\n<label for=\\\"color\\\">Color</label><br>\\n<input type=\\\"text\\\" id=\\\"color\\\" [(ngModel)]=\\\"newRanger.color\\\" placeholder=\\\"i.e. green\\\"><br>\\n<button id=\\\"add\\\" (click)=\\\"create(newRanger)\\\">Add</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-list.component.html\n// module id = ../../../../../src/demo/ranger/ranger-list.component.html\n// module chunks = main","import { ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Ranger } from '../mockServer';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  createCreateRangerQuery,\n  createDeleteRangerQuery,\n  createGetRangerQuery,\n  createUpdateRangerQuery,\n  rangerByIdSelector\n} from './queries';\nimport { ConnectService, ConnectRequestParams, NqConnectedComponent, provideNqConnectedComponent } from '../../lib';\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [provideNqConnectedComponent(RangerListComponent)],\n  selector: 'nq-ranger-list',\n  templateUrl: 'ranger-list.component.html'\n})\nexport class RangerListComponent implements NqConnectedComponent {\n  @Input() nqData: Ranger[];\n  @Output() nqRefresh: EventEmitter<any> = new EventEmitter();\n\n  showRangers: { [id: number]: boolean} = {};\n  newRanger: Ranger = {};\n\n  constructor(private connectService: ConnectService, public changeDetector: ChangeDetectorRef) {}\n\n  getDetailsQuery(id: number): ConnectRequestParams {\n    return Object.assign({}, createGetRangerQuery(id), { selector: rangerByIdSelector(id) });\n  }\n\n  edit(ranger: Ranger) {\n    const updatedRanger = Object.assign({}, ranger, { name: ranger.name + ' Edited' });\n    const mutateQuery = Object.assign({}, createUpdateRangerQuery(updatedRanger), { selector: rangerByIdSelector(ranger.id) });\n    this.connectService.mutateAsync(mutateQuery);\n  }\n\n  create(ranger: Ranger) {\n    const mutateQuery = Object.assign({}, createCreateRangerQuery(ranger));\n    this.connectService.mutateAsync(mutateQuery);\n    this.newRanger = {};\n  }\n\n  delete(id: number) {\n    const mutateQuery = Object.assign({}, createDeleteRangerQuery(id));\n    this.connectService.mutateAsync(mutateQuery);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-list.component.ts","import { ChangeDetectorRef } from '@angular/core';\nimport { ConnectRequestDirective, NqConnectedComponent } from './../../lib';\nimport { ConnectService } from './../../lib/services/connect.service';\nimport { Directive, Optional } from '@angular/core';\nimport { createGetRangerListQuery, rangerListSelector } from './queries';\n\n@Directive({ selector: '[rangerListData]' })\nexport class RangerListDataDirective extends ConnectRequestDirective {\n  constructor(private connect: ConnectService, public changeDetector: ChangeDetectorRef, @Optional() public host: NqConnectedComponent) {\n    super(connect, changeDetector, host);\n    this.config = Object.assign({}, createGetRangerListQuery(), { selector: rangerListSelector });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/demo/ranger/ranger-list.data.directive.ts","import { MockMode } from '../lib/helpers/mockMode';\n// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  mockMode: MockMode.None,\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/environments/environment.ts","import { ChangeDetectorRef } from '@angular/core';\nimport { Optional } from '@angular/core';\nimport { HostBinding } from '@angular/core';\nimport { ConnectRequestParams, ConnectService } from '../services/connect.service';\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output, Host, Type } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { NqConnectedComponent } from './connected.component';\n\n@Directive({\n  exportAs: 'nqConnect',\n  selector: '[nqConnect]',\n})\nexport class ConnectRequestDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('nqConnect')\n  config: any = <ConnectRequestParams>undefined;\n  @Output() response: EventEmitter<any> = new EventEmitter();\n\n  subscription: Subscription;\n\n  constructor(\n    private connectService: ConnectService,\n    public changeDetector: ChangeDetectorRef,\n    @Optional() public host: NqConnectedComponent,\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribe(this.config);\n    if (this.host) {\n      this.host.nqRefresh.subscribe(() => this.forceRequest());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe();\n  }\n\n  subscribe(config: ConnectRequestParams): void {\n    this.unsubscribe();\n    this.subscription = this.connectService.requestAsync(config).subscribe(response => {\n      if (this.response) {\n        if (this.host) {\n          setTimeout(() => {\n            this.host.nqData = response;\n            if (this.host.changeDetector) {\n              this.host.changeDetector.markForCheck();\n            }\n          });\n        }\n        this.response.emit(response);\n      }\n    });\n  }\n\n  unsubscribe(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  forceRequest(): void {\n    this.subscribe(Object.assign({}, this.config, { force: true }));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/directives/connect.directive.ts","import { EventEmitter, forwardRef, Provider, ChangeDetectorRef } from '@angular/core';\n\nexport abstract class NqConnectedComponent {\n  changeDetector?: ChangeDetectorRef;\n  nqData: any;\n  nqRefresh: EventEmitter<any>;\n}\n\nexport function provideNqConnectedComponent(component: any, parentType?: any): Provider {\n  return { provide: parentType || NqConnectedComponent, useExisting: forwardRef(() => component) };\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/directives/connected.component.ts","export const REQUEST_ASYNC = '[ngrx-query] REQUEST_ASYNC';\nexport const MUTATE_ASYNC = '[ngrx-query] MUTATE_ASYNC';\nexport const CANCEL_QUERY = '[ngrx-query] CANCEL_QUERY';\nexport const RESET = '[ngrx-query] RESET';\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/actionTypes.ts","import { Action } from '@ngrx/store';\nimport { MUTATE_ASYNC, REQUEST_ASYNC } from './actionTypes';\nimport { requestAsync as rqRequestAsync, mutateAsync as rqMutateAsync } from 'redux-query/dist/es/actions';\n\nexport type TransformFunction = (body: any, text?: string, response?: Response) => { [id: string]: any};\nexport type UpdateFunction = (prevValue: any, value: any) => any;\nexport interface UpdateFunctionMap {\n  [id: string]: UpdateFunction;\n}\nexport interface HttpOptions {\n  method?: 'DELETE' | 'GET' | 'HEAD' | 'POST' | 'PUT';\n  headers?: { [key: string]: any };\n  credentials?: 'include';\n}\n\nexport interface BaseParams {\n    body?: Object;\n    meta?: Object;\n    url: string;\n    queryKey?: string;\n}\nexport interface RequestParams extends BaseParams {\n    force?: boolean;\n    options?: HttpOptions;\n    retry?: boolean;\n    transform?: TransformFunction;\n    update: UpdateFunctionMap;\n};\nexport interface RequestAsyncAction extends RequestParams, Action {\n  type: typeof REQUEST_ASYNC;\n}\n\nexport interface MutateParams extends BaseParams {\n    options?: HttpOptions;\n    optimisticUpdate?: UpdateFunctionMap;\n    transform?: TransformFunction;\n    update: UpdateFunctionMap;\n};\nexport interface MutateAsyncAction extends MutateParams, Action {\n  type: typeof MUTATE_ASYNC;\n}\n\nexport const requestAsync\n  = (params: RequestParams): RequestAsyncAction => Object.assign({}, rqRequestAsync(params), { type: REQUEST_ASYNC });\nexport const mutateAsync\n  = (params: MutateParams): MutateAsyncAction => Object.assign({}, rqMutateAsync(params), { type: MUTATE_ASYNC });\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/actions.ts","import { NgrxQueryConfig } from './ngrxQueryConfig';\nimport { InjectionToken } from '@angular/core';\n\nexport const statusCodes = {\n  GATEWAY_TIMEOUT: 504,\n  REQUEST_TIMEOUT: 408, // client took too long\n  SERVICE_UNAVAILABLE: 503,\n  TOO_MANY_REQUESTS: 429,\n  UNKNOWN: 0,\n};\n\nexport const NGRX_QUERY_CONFIG = new InjectionToken('NGRX_QUERY_CONFIG');\n\nexport const defaultEntitiesSelector = state => state.entities;\nexport const defaultQueriesSelector = state => state.queries;\nexport const defaultBackoffConfig = {\n  maxAttempts: 5,\n  maxDuration: 5000,\n  minDuration: 300,\n};\nexport const defaultRetryableStatusCodes = [\n  statusCodes.UNKNOWN, // normally means a failed connection\n  statusCodes.REQUEST_TIMEOUT,\n  statusCodes.TOO_MANY_REQUESTS, // hopefully backoff stops this getting worse\n  statusCodes.SERVICE_UNAVAILABLE,\n  statusCodes.GATEWAY_TIMEOUT,\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/config.ts","import { Observable } from 'rxjs/Observable';\nimport { take } from 'rxjs/operators';\n\nexport function getLatest<T>(o$: Observable<T>): T {\n  let result: T;\n  o$.pipe(take(1)).subscribe(x => result = x);\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/getLatest.ts","export function invariant(condition: boolean, message: string, context?: any): void {\n  if (!condition) {\n    let errorMessage = message;\n\n    if (context) {\n      errorMessage = (message.indexOf('%s') !== -1) ?\n        message.replace('%s', context) :\n        errorMessage = `${message}: ${context}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/invariant.ts","export enum MockMode {\n  None,\n  Record,\n  Mock,\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/mockMode.ts","import { MockMode } from './mockMode';\n\nexport type Selector = (state: any) => any;\nexport interface BackoffConfig {\n  maxAttempts: number;\n  maxDuration: number;\n  minDuration: number;\n};\nexport interface MockConfig {\n  mode: MockMode;\n  saveMockData: (queryKey: string, mockResponseActions: any[]) => void;\n  getMockData: (queryKey: string) => any[];\n}\nexport interface NgrxQueryConfig {\n  queriesSelector?: Selector;\n  entitiesSelector?: Selector;\n  backoff?: BackoffConfig;\n  retryableStatusCodes?: number[];\n  mock?: MockConfig;\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/ngrxQueryConfig.ts","import { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { filter } from 'rxjs/operators';\n\nexport const ofType = (actionType: string) => <T>(source: Observable<Action>) =>\n  source.pipe(filter(action => action.type === actionType));\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/helpers/ofType.ts","export { NgrxQueryModule } from './ngrx-query';\nexport { NgrxQueryEffects } from './services/effects.service';\nexport { default as entitiesReducer } from 'redux-query/dist/es/reducers/entities';\nexport { default as queriesReducer } from 'redux-query/dist/es/reducers/queries';\nexport * from 'redux-query/dist/es/selectors/query';\nexport { ConnectService, ConnectRequestParams, ConnectMutateParams } from './services/connect.service';\nexport { ConnectEntityService } from './services/connectEntity.service';\nexport { ConnectRequestDirective } from './directives/connect.directive';\nexport { NqConnectedComponent, provideNqConnectedComponent } from './directives/connected.component';\nexport { NGRX_QUERY_CONFIG } from './helpers/config';\nexport { NgrxQueryConfig } from './helpers/ngrxQueryConfig';\nexport { RequestParams, MutateParams, requestAsync, mutateAsync } from './helpers/actions';\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/index.ts","import { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { ConnectRequestDirective } from './directives/connect.directive';\nimport { NGRX_QUERY_CONFIG } from './helpers/config';\nimport { NgrxQueryConfig } from './helpers/ngrxQueryConfig';\nimport { ConnectService } from './services/connect.service';\nimport { ConnectEntityService } from './services/connectEntity.service';\nimport { NgrxQueryEffects } from './services/effects.service';\n\n@NgModule({\n  declarations: [\n    ConnectRequestDirective,\n  ],\n  exports: [\n    ConnectRequestDirective,\n  ],\n  imports: [\n    EffectsModule.forFeature([NgrxQueryEffects]),\n    HttpClientModule,\n  ],\n})\nexport class NgrxQueryModule {\n\n  /* optional: in case you need users to override your providers */\n  static forRoot(config?: NgrxQueryConfig): ModuleWithProviders {\n    return {\n      ngModule: NgrxQueryModule,\n      providers: [\n        { provide: NGRX_QUERY_CONFIG, useValue: config },\n        ConnectService,\n        ConnectEntityService,\n      ],\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/ngrx-query.ts","import { NgrxQueryConfig, Selector } from '../helpers/ngrxQueryConfig';\nimport { mutateAsync, MutateParams, requestAsync, RequestParams } from '../helpers/actions';\nimport { defaultEntitiesSelector, NGRX_QUERY_CONFIG } from '../helpers/config';\nimport { Inject, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface ConnectRequestParams extends RequestParams {\n  selector?: Selector;\n}\nexport interface ConnectMutateParams extends MutateParams {\n  selector?: Selector;\n}\n\n@Injectable()\nexport class ConnectService {\n  constructor(private store: Store<any>, @Inject(NGRX_QUERY_CONFIG) private config: NgrxQueryConfig) { }\n\n  public mutateAsync(config: ConnectMutateParams): Observable<any> {\n    this.store.dispatch(mutateAsync(config));\n    return this.select(config.selector);\n  }\n\n  public requestAsync(config: ConnectRequestParams): Observable<any> {\n    this.store.dispatch(requestAsync(config));\n    return this.select(config.selector);\n  }\n\n  public select(selector: Selector): Observable<any> {\n    return this.store.select(selector || this.config && this.config.entitiesSelector || defaultEntitiesSelector);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/services/connect.service.ts","import { withoutPath } from 'redux-query/dist/es/reducers/entities';\nimport { ConnectService } from './connect.service';\nimport { NgrxQueryConfig, Selector } from '../helpers/ngrxQueryConfig';\nimport { mutateAsync, MutateParams, requestAsync, RequestParams } from '../helpers/actions';\nimport { defaultEntitiesSelector, NGRX_QUERY_CONFIG } from '../helpers/config';\nimport { Inject, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nexport function objectsByIdToArray(obj: object): any[] {\n  if (!obj) {\n    return [];\n  }\n  return Object.keys(obj).map(key => obj[key]);\n};\nexport function arrayToObjectsById(array: any[], keyOf: (any) => string) {\n  return array.reduce((objectsById, item) => {\n    objectsById[keyOf(item)] = item;\n    return objectsById;\n  }, {});\n}\n\nexport interface EntityConfig<E> {\n  idSelector: (item: E) => any;\n  entityTypeName: string;\n  endpoints: CrudEndpoints;\n}\n\nexport interface CrudEndpoints {\n  create: string;\n  remove: (id: number | string) => string;\n  getById: (id: number | string) => string;\n  list: string;\n  update: string;\n}\n\n@Injectable()\nexport class ConnectEntityService<E> {\n  config: EntityConfig<E>;\n  entity: E;\n\n  constructor(private connectService: ConnectService) { }\n\n  init(config: EntityConfig<E>) {\n    this.config = config;\n  }\n\n  list(): Observable<E[]> {\n    return this.connectService.requestAsync({\n      selector: s => objectsByIdToArray(s.entities[this.config.entityTypeName]),\n      transform: (response: E[]) => ({ [this.config.entityTypeName]: arrayToObjectsById(response, this.config.idSelector) }),\n      update: {\n        [this.config.entityTypeName]: (prevEntities, entities) => ({\n          ...prevEntities,\n          ...entities,\n        }),\n      },\n      url: this.config.endpoints.list,\n    });\n  }\n  get(id: number | string): Observable<E> {\n    return this.connectService.requestAsync({\n      selector: s => s.entities[this.config.entityTypeName] && s.entities[this.config.entityTypeName][id],\n      transform: (response: E) => ({ [this.config.entityTypeName]: { [id]: response } }),\n      update: {\n        [this.config.entityTypeName]: (prevEntities, entities) => ({\n          ...prevEntities,\n          ...entities,\n        }),\n      },\n      url: this.config.endpoints.getById(id),\n    });\n  }\n  create(entity: E): Observable<E> {\n    return this.connectService.mutateAsync({\n      body: entity,\n      optimisticUpdate: {\n        [this.config.entityTypeName]: (prevEntities) => ({\n          ...prevEntities,\n          [this.config.idSelector(entity)]: entity,\n        }),\n      },\n      transform: (response: E) => ({ [this.config.entityTypeName]: { [this.config.idSelector(response)]: response } }),\n      update: {\n        [this.config.entityTypeName]: (prevEntities, entities) => ({\n          ...prevEntities,\n          ...entities,\n        }),\n      },\n      url: this.config.endpoints.create,\n    });\n  }\n  edit(entity: E): Observable<E> {\n    return this.connectService.mutateAsync({\n      body: entity,\n      optimisticUpdate: {\n        [this.config.entityTypeName]: (prevEntities) => ({\n          ...prevEntities,\n          [this.config.idSelector(entity)]: entity,\n        }),\n      },\n      options: {\n        method: 'PUT',\n      },\n      selector: s => s.entities[this.config.entityTypeName][this.config.idSelector(entity)],\n      transform: (response: E) => ({ [this.config.entityTypeName]: { [this.config.idSelector(response)]: response } }),\n      update: {\n        [this.config.entityTypeName]: (prevEntities, entities) => ({\n          ...prevEntities,\n          ...entities,\n        }),\n      },\n      url: this.config.endpoints.update,\n    });\n  }\n  delete(id: number | string): Observable<E> {\n    return this.connectService.mutateAsync({\n      selector: s => s.entities[this.config.entityTypeName][id],\n      optimisticUpdate: {\n        [this.config.entityTypeName]: prevEntities => withoutPath(prevEntities, [id]),\n      },\n      options: {\n        method: 'DELETE',\n      },\n      update: {\n        [this.config.entityTypeName]: prevEntities => withoutPath(prevEntities, [id]),\n      },\n      url: this.config.endpoints.remove(id + ''),\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/services/connectEntity.service.ts","import { MutateAsyncAction, MutateParams, RequestAsyncAction } from '../helpers/actions';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as actions from 'redux-query/dist/es/actions';\nimport * as actionTypes from 'redux-query/dist/es/constants/action-types';\nimport * as httpMethods from 'redux-query/dist/es/constants/http-methods';\nimport { getQueryKey } from 'redux-query/dist/es/lib/query-key';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { range } from 'rxjs/observable/range';\nimport { timer } from 'rxjs/observable/timer';\nimport { catchError, filter, flatMap, map, mergeMap, retryWhen, tap, zip } from 'rxjs/operators';\n\nimport * as ngrxQueryActionTypes from '../helpers/actionTypes';\nimport { NGRX_QUERY_CONFIG } from '../helpers/config';\nimport { getLatest } from '../helpers/getLatest';\nimport { invariant } from '../helpers/invariant';\nimport { NgrxQueryConfig } from '../helpers/ngrxQueryConfig';\nimport { MockMode } from '../helpers/mockMode';\nimport { ofType } from '../helpers/ofType';\nimport { defaultBackoffConfig, defaultEntitiesSelector, defaultQueriesSelector, defaultRetryableStatusCodes } from './../helpers/config';\n\nexport function identity(x: any, y?: any, z?: any): any {\n  return x;\n}\n\nexport function optimisticUpdateEntities(optimisticUpdate, entities) {\n  return Object.keys(optimisticUpdate).reduce(\n    (accum, key) => {\n      if (optimisticUpdate[key]) {\n        accum[key] = optimisticUpdate[key](entities[key]);\n      } else {\n        accum[key] = entities[key];\n      }\n\n      return accum;\n    },\n    {});\n};\n\nexport function updateEntities(update, entities, transformed) {\n  // If update not supplied, then no change to entities should be made\n  return Object.keys(update || {}).reduce(\n    (accum, key) => {\n      accum[key] = update[key]((entities || {})[key], (transformed || {})[key]);\n\n      return accum;\n    },\n    {});\n};\n\nexport function getPendingQueries(queries: any[]) {\n  return queries.filter((query) => query.isPending);\n};\n\n@Injectable()\nexport class NgrxQueryEffects {\n  @Effect() public requestAsync: Observable<Action> = this.actions$.pipe(\n    ofType(ngrxQueryActionTypes.REQUEST_ASYNC),\n    map((action: RequestAsyncAction) => {\n      const {\n        url,\n        force,\n        retry,\n        update,\n      } = action;\n\n      invariant(!!url, 'Missing required `url` field in action handler');\n      invariant(!!update, 'Missing required `update` field in action handler');\n\n      const queryKey = getQueryKey(action);\n\n      const state = getLatest(this.store);\n      const queries = this.config && this.config.queriesSelector && this.config.queriesSelector(state)\n        || defaultQueriesSelector(state);\n\n      const queriesState = queries[queryKey];\n      const { isPending, status } = queriesState || <any>{};\n      const hasSucceeded = status >= 200 && status < 300;\n      const attemptRequest = force || !queriesState || (retry !== false && !isPending && !hasSucceeded);\n      return { attemptRequest, action };\n    }),\n    filter(({ attemptRequest }) => attemptRequest),\n    mergeMap(({ action }) => {\n      const {\n        url,\n        body,\n        transform = identity,\n        update,\n        options = <any>{},\n        meta,\n      } = action;\n      const queryKey = getQueryKey(action);\n\n      const start = new Date();\n      const { method = httpMethods.GET } = options;\n\n      const request = {\n        body,\n        headers: options.headers,\n        method,\n        observe: (options.observe || 'response') as 'response',\n        responseType: options.responseType,\n        url,\n        withCredentials: options.credentials === 'include',\n      };\n\n      return of({}).pipe(\n        tap(() => {\n          this.store.dispatch(actions.requestStart({url, body, request, meta, queryKey}));\n        }),\n        filter(() => {\n          if (this.config && this.config.mock && this.config.mock.mode === MockMode.Mock) {\n            const mockActions = this.config.mock.getMockData(queryKey);\n            if (mockActions) {\n              mockActions.forEach(mockAction => {\n                this.store.dispatch(mockAction);\n              });\n            } else {\n              this.store.dispatch(actions.requestFailure({\n                url,\n                body,\n                status: 500,\n                responseBody: 'No mock data recorded for ' + queryKey,\n                meta,\n                queryKey,\n              }));\n            }\n            return false;\n          }\n          return true;\n        }),\n        mergeMap(() => {\n          return this.http.request(request.method, url, request)\n            .pipe(map(response => {\n              if (!response.ok) {\n                throw response;\n              }\n              return response;\n            }));\n        }),\n        map(response => {\n          const callbackState = getLatest(this.store);\n          const entities = this.config && this.config.entitiesSelector && this.config.entitiesSelector(callbackState)\n            || defaultEntitiesSelector(callbackState);\n          const parsedResponse = response.body;\n          const transformed = transform(parsedResponse, response.body, response);\n          const newEntities = updateEntities(update, entities, transformed);\n          const requestSuccessAction = actions.requestSuccess({\n            url, body, status: response.status, entities: newEntities, meta, queryKey, responseBody: parsedResponse,\n            responseText: response.body, responseHeaders: response.headers\n          });\n          this.store.dispatch(requestSuccessAction);\n          const end = new Date();\n          const duration = end.valueOf() - start.valueOf();\n          const requestAsyncAction = {\n            body: parsedResponse,\n            duration,\n            entities: newEntities,\n            meta,\n            status: response.status,\n            text: response.body,\n            transformed,\n            type: actionTypes.REQUEST_ASYNC,\n          };\n          if (this.config && this.config.mock && this.config.mock.mode === MockMode.Record) {\n            this.config.mock.saveMockData(queryKey, [requestSuccessAction, requestAsyncAction]);\n          }\n          return requestAsyncAction;\n        }),\n        retryWhen(attempts => {\n          const backoff = this.config && this.config.backoff || defaultBackoffConfig;\n          const retryableStatusCodes = this.config && this.config.retryableStatusCodes || defaultRetryableStatusCodes;\n          return range(1, backoff.maxAttempts + 1).pipe(\n            zip(attempts, (i, response) => ({ response, i })),\n            flatMap(({ response, i }) => {\n              if (i < backoff.maxAttempts && retryableStatusCodes.indexOf(response.status) >= 0) {\n                // Delay retry by min duration the first attempt, up to max duration on the (maxAttempts)th attempt\n                return timer(\n                  backoff.minDuration +\n                  (i - 1) * (backoff.maxDuration - backoff.minDuration) / backoff.maxAttempts,\n                );\n              } else {\n                // Tried maxAttempts, now fail\n                throw response;\n              }\n            })\n          );\n        }),\n        catchError((errResponse: HttpErrorResponse, caught) => {\n          if (errResponse.error instanceof Error) {\n            throw errResponse.error;\n          }\n          const requestFailureAction = actions.requestFailure({\n            url,\n            body,\n            status: errResponse.status,\n            responseBody: errResponse.error,\n            meta,\n            queryKey,\n            responseText: errResponse.error,\n            responseHeaders: errResponse.headers\n          });\n          if (this.config && this.config.mock && this.config.mock.mode === MockMode.Record) {\n            this.config.mock.saveMockData(queryKey, [requestFailureAction]);\n          }\n          return of(requestFailureAction);\n        })\n      );\n    })\n  );\n\n  @Effect() public mutateAsync: Observable<any> = this.actions$.pipe(\n    ofType(ngrxQueryActionTypes.MUTATE_ASYNC),\n    map((action: MutateAsyncAction) => {\n      const {\n        url,\n        transform = identity,\n        update,\n        body,\n        meta,\n        optimisticUpdate,\n        options = <any>{},\n      } = action;\n      invariant(!!url, 'Missing required `url` field in action handler');\n\n      const state = getLatest(this.store);\n      const entities = this.config && this.config.entitiesSelector && this.config.entitiesSelector(state)\n        || defaultEntitiesSelector(state);\n      let optimisticEntities;\n      if (optimisticUpdate) {\n        optimisticEntities = optimisticUpdateEntities(optimisticUpdate, entities);\n      }\n\n      const queryKey = getQueryKey(action);\n      // const start = new Date();\n      const { method = httpMethods.POST } = options;\n      const request = {\n        body,\n        headers: new HttpHeaders(options.headers),\n        method,\n        observe: (options.observe || 'response') as 'response',\n        responseType: options.responseType,\n        url,\n        withCredentials: options.credentials === 'include',\n      };\n\n      // Note: only the entities that are included in `optimisticUpdate` will be passed along in the\n      // `mutateStart` action as `optimisticEntities`\n      this.store.dispatch(actions.mutateStart({url, body, request, optimisticEntities, queryKey, meta}));\n      return { ...action, request, entities, queryKey };\n    }),\n    filter((action) => {\n      if (!this.config || !this.config.mock || this.config.mock.mode !== MockMode.Mock) {\n        // Not mocking so continue\n        return true;\n      }\n      const {\n        url,\n        body,\n        meta,\n        queryKey,\n      } = action;\n      const mockActions = this.config.mock.getMockData(queryKey);\n      if (mockActions) {\n        mockActions.forEach(mockAction => {\n          this.store.dispatch(mockAction);\n        });\n      } else {\n        this.store.dispatch(actions.requestFailure({\n          url,\n          body,\n          status: 500,\n          responseBody: 'No mock data recorded for ' + queryKey,\n          meta,\n          queryKey,\n        }));\n      }\n      // Dispatched mock actions so abort network call\n      return false;\n    }),\n    mergeMap((action) => {\n      const {\n        url,\n        transform = identity,\n        update,\n        body,\n        meta,\n        request,\n        entities,\n        queryKey,\n      } = action;\n      return this.http.request(request.method, url, request).pipe(\n        map(response => {\n          if (!response.ok) {\n            throw response;\n          }\n          const status = (response && response.status) || 0;\n          const responseBody = (response && response.body) || undefined;\n          const responseText = (response && response.body) || undefined;\n\n          const transformed = transform(responseBody, responseText, response);\n          const newEntities = updateEntities(update, entities, transformed);\n          return actions.mutateSuccess({\n            url, body, status, entities: newEntities, queryKey, responseBody, responseText, responseHeaders: response.headers, meta\n          });\n        }),\n        catchError((errResponse: HttpErrorResponse) => {\n          if (errResponse.error instanceof Error) {\n            throw errResponse.error;\n          }\n          return of(\n            actions.mutateFailure({\n              url, body, status: errResponse.status, rolledBackEntities: entities, queryKey,\n              responseBody: errResponse.error, responseText: errResponse.error, responseHeaders: errResponse.headers, meta\n            })\n          );\n        })\n      );\n    })\n  );\n  // @Effect() public cancelQuery: Observable<Action> = this.actions$;\n  // @Effect() public reset: Observable<Action> = this.actions$;\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<any>,\n    private http: HttpClient,\n    @Inject(NGRX_QUERY_CONFIG) private config: NgrxQueryConfig,\n  ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/lib/services/effects.service.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './demo/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/isaac/Documents/Contributions/ngrx-query/src/main.ts"],"sourceRoot":"webpack:///"}